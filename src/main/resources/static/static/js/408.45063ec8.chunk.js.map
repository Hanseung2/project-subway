{"version":3,"file":"static/js/408.45063ec8.chunk.js","mappings":"o/HAsJA,EAjJkB,WACd,IAAMA,GAAMC,EAAAA,EAAAA,UAsIZ,OApIAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAMC,EAAAA,GAAUJ,EAAIK,SACXC,GAAG,SAAS,WACTF,EAAAA,GAAU,YAAYG,QAC1B,IAAG,GAGXC,EAASJ,EAAAA,MACGK,OAAOL,EAAAA,IAAUM,GAAY,SAAAC,GAAC,OAAIC,WAAWD,EAAEE,EAAE,KACjDC,MAAM,CAAC,IAAK,MAExBC,EAASX,EAAAA,MACGK,OAAOL,EAAAA,IAAUM,GAAY,SAAAC,GAAC,OAAIC,WAAWD,EAAEK,EAAE,KACjDF,MAAM,CAAC,IAAK,MASxBG,EAAOb,EAAAA,MACGS,GAAE,SAAAF,GAAC,OAAIH,EAAOI,WAAWD,EAAEE,GAAG,IAC9BG,GAAE,SAAAL,GAAC,OAAII,EAAOH,WAAWD,EAAEK,GAAG,IAC9BE,MAAMd,EAAAA,KAEtBD,EAAIgB,OAAO,QACPC,MAAMV,GACNW,KAAK,OAAQ,QACbA,KAAK,UAAU,SAAAV,GAAC,OAdF,SAACM,GACf,MAAa,kBAATA,EAAuB,QACpB,OACX,CAWwBK,CAAUX,EAAE,GAAGM,KAAK,IACxCI,KAAK,eAAgB,GACrBA,KAAK,IAAKJ,GAGdd,EAAIoB,UAAU,YACVC,KAAKd,GACLe,QACAN,OAAO,UACPE,KAAK,QAAS,WACdA,KAAK,MAAM,SAAAV,GAAC,OAAIH,EAAOI,WAAWD,EAAEE,GAAG,IACvCQ,KAAK,MAAM,SAAAV,GAAC,OAAII,EAAOH,WAAWD,EAAEK,GAAG,IACvCK,KAAK,IAAK,GACVA,KAAK,OAAQ,SACbA,KAAK,SAAU,SACfA,KAAK,eAAgB,GACrBf,GAAG,SAAS,SAASoB,EAAOf,GACzBe,EAAMC,kBACNC,EAAYjB,EAChB,IAGHR,EAAIoB,UAAU,iBACVC,KAAKd,GACLe,QACAN,OAAO,QACPE,KAAK,QAAS,gBACdA,KAAK,KAAK,SAAAV,GAAC,OAAIH,EAAOI,WAAWD,EAAEE,GAAG,IACtCQ,KAAK,KAAK,SAAAV,GAAC,OAAII,EAAOH,WAAWD,EAAEK,IAAM,EAAE,IAC3CK,KAAK,cAAe,UACpBA,KAAK,YAAa,QAClBA,KAAK,OAAQ,SACbQ,MAAK,SAAAlB,GAAC,OAAIA,EAAEmB,IAAI,IAGpB,IAAMF,EAAc,SAACJ,GACjBpB,EAAAA,GAAU,YAAYG,SAEtB,IAAMwB,EAAU5B,EAAIgB,OAAO,KACPE,KAAK,QAAS,WACdA,KAAK,YAAY,aAADW,OAAexB,EAAOI,WAAWY,EAAKX,IAAG,MAAAmB,OAAKjB,EAAOH,WAAWY,EAAKR,IAAM,IAAG,MAElHe,EAAQZ,OAAO,QACPE,KAAK,QAAS,KACdA,KAAK,SAAU,KACfA,KAAK,KAAM,IACXA,KAAK,IAAK,GACVA,KAAK,OAAQ,SACbA,KAAK,SAAU,SAEvBU,EAAQZ,OAAO,QACPE,KAAK,IAAK,GACVA,KAAK,IAAK,IACVA,KAAK,cAAe,UACpBQ,KAAKL,EAAKM,MAGV,CACZ,CAAED,KAAM,eAAMhB,GAAI,GAAIG,EAAG,IACzB,CAAEa,KAAM,eAAMhB,EAAG,GAAIG,EAAG,KAIpBiB,SAAQ,SAAAC,GAEZH,EAAQZ,OAAO,QACPE,KAAK,IAAKa,EAAOrB,EAAI,IACrBQ,KAAK,IAAKa,EAAOlB,EAAI,IACrBK,KAAK,QAAS,IACdA,KAAK,SAAU,IACfA,KAAK,OAAQ,aACbA,KAAK,KAAM,GACXc,MAAM,SAAU,WAChB7B,GAAG,SAAS,WACW,iBAAhB4B,EAAOL,KACPE,EAAQxB,SAER6B,QAAQC,IAAI,GAADL,OAAIE,EAAOL,KAAI,8BAGlC,IAGPE,EAAQZ,OAAO,QACPE,KAAK,IAAKa,EAAOrB,GACjBQ,KAAK,IAAKa,EAAOlB,GACjBK,KAAK,cAAe,UACpBA,KAAK,qBAAsB,UAC3BQ,KAAKK,EAAOL,MACZM,MAAM,SAAU,WAChB7B,GAAG,SAAS,WACW,iBAAhB4B,EAAOL,KACPE,EAAQxB,SAER6B,QAAQC,IAAI,GAADL,OAAIE,EAAOL,KAAI,8BAGlC,GACH,GACJ,CACJ,GAAG,KAGCS,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACLC,MAAQ,wCACRC,YAAY,wCAASC,UACjBJ,EAAAA,EAAAA,KAAA,OAAKtC,IAAKA,EAAK2C,MAAM,MAAMC,OAAO,SAI9C,C","sources":["pages/Developer.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport subwayData from '../data/test.json';\nimport Main from '../components/section/Main'\n\nconst Developer = () => {\n    const ref = useRef();\n\n    useEffect(() => {\n        const svg = d3.select(ref.current)\n                      .on(\"click\", () => { // 배경 클릭 시 툴팁 제거\n                          d3.select(\".tooltip\").remove();\n                      }, true); // true로 설정하여 이벤트 캡처 단계에서 이벤트 리스너가 동작하도록 함\n\n        // 스케일 설정\n        const xScale = d3.scaleLinear()\n                         .domain(d3.extent(subwayData, d => parseFloat(d.x)))\n                         .range([200, 600]);\n\n        const yScale = d3.scaleLinear()\n                         .domain(d3.extent(subwayData, d => parseFloat(d.y)))\n                         .range([600, 200]);\n\n        // 노선별 색상 설정\n        const lineColor = (line) => {\n            if (line === \"2호선\") return \"green\"; // 2호선은 초록색으로 설정\n            return \"black\"; // 기본 색상\n        };\n\n        // 라인 생성 함수\n        const line = d3.line()\n                       .x(d => xScale(parseFloat(d.x)))\n                       .y(d => yScale(parseFloat(d.y)))\n                       .curve(d3.curveLinear);\n\n        svg.append(\"path\")\n           .datum(subwayData)\n           .attr(\"fill\", \"none\")\n           .attr(\"stroke\", d => lineColor(d[0].line))\n           .attr(\"stroke-width\", 4)\n           .attr(\"d\", line);\n\n        // 점 추가\n        svg.selectAll(\".station\")\n           .data(subwayData)\n           .enter()\n           .append(\"circle\")\n           .attr(\"class\", \"station\")\n           .attr(\"cx\", d => xScale(parseFloat(d.x)))\n           .attr(\"cy\", d => yScale(parseFloat(d.y)))\n           .attr(\"r\", 5)\n           .attr(\"fill\", \"white\")\n           .attr(\"stroke\", \"black\")\n           .attr(\"stroke-width\", 3)\n           .on(\"click\", function(event, d) {\n               event.stopPropagation(); // 이벤트 버블링을 방지\n               showTooltip(d);\n           });\n\n        // 점 하단에 이름 추가\n        svg.selectAll(\".station-name\")\n           .data(subwayData)\n           .enter()\n           .append(\"text\")\n           .attr(\"class\", \"station-name\")\n           .attr(\"x\", d => xScale(parseFloat(d.x)))\n           .attr(\"y\", d => yScale(parseFloat(d.y)) + 15)\n           .attr(\"text-anchor\", \"middle\")\n           .attr(\"font-size\", \"10px\")\n           .attr(\"fill\", \"black\")\n           .text(d => d.name);\n\n        // 말풍선 표시 함수\n        const showTooltip = (data) => {\n            d3.select(\".tooltip\").remove(); // 기존 툴팁 제거\n\n            const tooltip = svg.append(\"g\")\n                               .attr(\"class\", \"tooltip\")\n                               .attr(\"transform\", `translate(${xScale(parseFloat(data.x))}, ${yScale(parseFloat(data.y)) - 120})`);\n\n            tooltip.append(\"rect\")\n                   .attr(\"width\", 150)\n                   .attr(\"height\", 100)\n                   .attr(\"x\", -75)\n                   .attr(\"y\", 0)\n                   .attr(\"fill\", \"white\")\n                   .attr(\"stroke\", \"black\");\n\n            tooltip.append(\"text\")\n                   .attr(\"x\", 0)\n                   .attr(\"y\", 20)\n                   .attr(\"text-anchor\", \"middle\")\n                   .text(data.name);\n\n            // 버튼 데이터 배열\n    const buttons = [\n        { text: '출발', x: -30, y: 70 },\n        { text: '도착', x: 30, y: 70 }\n    ];\n\n    // 버튼 생성\n    buttons.forEach(button => {\n        // 버튼 배경\n        tooltip.append(\"rect\")\n               .attr(\"x\", button.x - 20)\n               .attr(\"y\", button.y - 15)\n               .attr(\"width\", 40)\n               .attr(\"height\", 30)\n               .attr(\"fill\", \"lightgrey\")\n               .attr(\"rx\", 5) // 둥근 모서리\n               .style(\"cursor\", \"pointer\")\n               .on(\"click\", () => {\n                   if (button.text === \"닫기\") {\n                       tooltip.remove();\n                   } else {\n                       console.log(`${button.text} 버튼 클릭`);\n                       // 출발 또는 도착 버튼 클릭 시 필요한 동작 구현\n                   }\n               });\n\n        // 버튼 텍스트\n        tooltip.append(\"text\")\n               .attr(\"x\", button.x)\n               .attr(\"y\", button.y)\n               .attr(\"text-anchor\", \"middle\")\n               .attr(\"alignment-baseline\", \"middle\")\n               .text(button.text)\n               .style(\"cursor\", \"pointer\")\n               .on(\"click\", () => {\n                   if (button.text === \"닫기\") {\n                       tooltip.remove();\n                   } else {\n                       console.log(`${button.text} 버튼 클릭`);\n                       // 출발 또는 도착 버튼 클릭 시 필요한 동작 구현\n                   }\n               });\n            });\n        };\n    }, []);\n\n    return (\n        <Main \n        title = \"테스트 페이지\"\n        description=\"테스트 페이지\">\n            <svg ref={ref} width=\"700\" height=\"700\"></svg>\n        \n        </Main>  \n        );\n};\n\nexport default Developer;\n"],"names":["ref","useRef","useEffect","svg","d3","current","on","remove","xScale","domain","subwayData","d","parseFloat","x","range","yScale","y","line","curve","append","datum","attr","lineColor","selectAll","data","enter","event","stopPropagation","showTooltip","text","name","tooltip","concat","forEach","button","style","console","log","_jsx","Main","title","description","children","width","height"],"sourceRoot":""}