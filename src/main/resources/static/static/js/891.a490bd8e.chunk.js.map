{"version":3,"file":"static/js/891.a490bd8e.chunk.js","mappings":"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","sources":["pages/Map.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'; // useSelector 추가\nimport Main from '../components/section/Main';\nimport subwayData from '../data/seoulsubwaydata.json';\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\nimport { IoSearch } from \"react-icons/io5\";\nimport { setStartStation, setEndStation } from '../data/actions'; // 액션 임포트 추가\n\nimport line1 from '../assets/img/subwaymapmarker/1호선마커.png';\nimport line2 from '../assets/img/subwaymapmarker/2호선마커.png';\nimport line3 from '../assets/img/subwaymapmarker/3호선마커.png';\nimport line4 from '../assets/img/subwaymapmarker/4호선마커.png';\nimport line5 from '../assets/img/subwaymapmarker/5호선마커.png';\nimport line6 from '../assets/img/subwaymapmarker/6호선마커.png';\nimport line7 from '../assets/img/subwaymapmarker/7호선마커.png';\nimport line8 from '../assets/img/subwaymapmarker/8호선마커.png';\nimport line9 from '../assets/img/subwaymapmarker/9호선마커.png';\n\nconst lineImages = {\n    \"1호선\": line1,\n    \"2호선\": line2,\n    \"3호선\": line3,\n    \"4호선\": line4,\n    \"5호선\": line5,\n    \"6호선\": line6,\n    \"7호선\": line7,\n    \"8호선\": line8,\n    \"9호선\": line9,\n    // 나머지 노선 이미지 URL 추가\n};\n\nconst Map = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [map, setMap] = useState(null); // 지도 인스턴스 상태 관리\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    // useSelector를 통해 Redux store에서 startStation과 endStation 가져오기\n    const startStation = useSelector(state => state.startStation);\n    const endStation = useSelector(state => state.endStation);\n\n\n\n    const navigateToRouteResult = () => {\n        navigate('/nav');\n    };\n\n    useEffect(() => {\n        // setStation 함수 설정\n        window.setStation = (stationName, type) => {\n            if (type === 'start') {\n                dispatch(setStartStation(stationName)); // Redux store에 출발지 설정 액션 디스패치\n            } else if (type === 'end') {\n                dispatch(setEndStation(stationName)); // Redux store에 도착지 설정 액션 디스패치\n            }\n        };\n\n        // Kakao 지도 API 스크립트 로드\n        const script = document.createElement('script');\n        script.src = \"//dapi.kakao.com/v2/maps/sdk.js?appkey=a576239cea9ab4b2daf2a00e251e97e9&autoload=false\";\n        script.async = true;\n        document.head.appendChild(script);\n\n        script.onload = () => {\n            window.kakao.maps.load(() => {\n                const mapContainer = document.getElementById('map');\n                const mapOption = {\n                    center: new window.kakao.maps.LatLng(37.5503, 127.0731), // 세종대학교 위치\n                    level: 5\n                };\n\n                const map = new window.kakao.maps.Map(mapContainer, mapOption);\n                setMap(map); // 지도 인스턴스를 상태에 저장\n\n                subwayData.forEach((station, index) => {\n                    const markerPosition = new window.kakao.maps.LatLng(station.y, station.x);\n\n                    // 노선에 맞는 이미지 URL 가져오기\n                    const markerImageSrc = lineImages[station.line];\n                    const markerImageSize = new window.kakao.maps.Size(24, 30);\n                    const markerImageOption = { offset: new window.kakao.maps.Point(12, 35) };\n                    const markerImage = new window.kakao.maps.MarkerImage(markerImageSrc, markerImageSize, markerImageOption);\n\n                    // 마커 생성 및 지도에 표시\n                    const marker = new window.kakao.maps.Marker({\n                        position: markerPosition,\n                        map: map,\n                        image: markerImage\n                    });\n\n                    const content = `\n                        <div class=\"wrap\" id=\"overlay-${index}\">\n                            <div class=\"info\">\n                                <div class=\"title\">\n                                    ${station.name}\n                                    <div class=\"close\" onclick=\"document.getElementById('overlay-${index}').style.display='none'\" title=\"닫기\"></div>\n                                </div>\n                                <div class=\"body\">\n                                    <div class=\"desc\">\n                                        <div class=\"ellipsis\">${station.line} ${station.name}</div>\n                                        <div>\n                                            <button onclick=\"setStation('${station.name}', 'start')\">출발</button>\n                                            <button onclick=\"setStation('${station.name}', 'end')\">도착</button>\n                                            <button onclick=\"window.goToLivePage('${station.name}')\">실시간 도착정보</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    `;\n\n                    const overlay = new window.kakao.maps.CustomOverlay({\n                        content: content,\n                        position: marker.getPosition(),\n                        yAnchor: 1\n                    });\n\n                    window.kakao.maps.event.addListener(marker, 'click', function () {\n                        overlay.setMap(map);\n                        document.querySelectorAll('.wrap').forEach(el => el.style.display = 'none');\n                        document.getElementById(`overlay-${index}`).style.display = 'block';\n                    });\n                });\n\n                window.goToLivePage = (stationName) => {\n                    navigate('/live', { state: { stationName } });\n                };\n            });\n        };\n\n        return () => {\n            document.head.removeChild(script);\n            delete window.goToArrivalPage;\n        };\n    }, [dispatch, navigate]);\n\n    const handleSearch = (e) => {\n        e.preventDefault(); // 기본 동작 방지\n        const station = subwayData.find(station => station.name.includes(searchTerm));\n        if (station && map) {\n            const moveLatLon = new window.kakao.maps.LatLng(station.y, station.x);\n            map.setCenter(moveLatLon);\n            map.setLevel(4);\n        }\n    };\n\n    return (\n        <Main title=\"지도\" description=\"지도 페이지\">\n                <div className=\"search-container\">\n                    <div className=\"search-form\">\n                        <form onSubmit={handleSearch}>\n                            <input\n                                type=\"text\"\n                                placeholder=\"지하철역 검색\"\n                                value={searchTerm}\n                                onChange={(e) => setSearchTerm(e.target.value)}\n                            />\n                            <button type=\"submit\"> <IoSearch size={20} /> </button>\n                        </form>\n                        <div className=\"route-box\">\n                            <div className=\"route-info\">출발지: {startStation}</div>\n                            <FaLongArrowAltRight />\n                            <div className=\"route-info\">도착지: {endStation}</div>\n                            <button onClick={navigateToRouteResult}>실시간 길찾기</button>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"map\">지도 로딩중...</div>\n\n        </Main>\n    );\n};\n\nexport default Map;\n"],"names":["lineImages","_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","map","setMap","dispatch","useDispatch","navigate","useNavigate","startStation","useSelector","state","endStation","useEffect","window","setStation","stationName","type","setStartStation","setEndStation","script","document","createElement","src","async","head","appendChild","onload","kakao","maps","load","mapContainer","getElementById","mapOption","center","LatLng","level","Map","subwayData","forEach","station","index","markerPosition","y","x","markerImageSrc","line","markerImageSize","Size","markerImageOption","offset","Point","markerImage","MarkerImage","marker","Marker","position","image","content","concat","name","overlay","CustomOverlay","getPosition","yAnchor","event","addListener","querySelectorAll","el","style","display","goToLivePage","removeChild","goToArrivalPage","_jsxs","Main","title","description","children","_jsx","className","onSubmit","e","preventDefault","find","includes","moveLatLon","setCenter","setLevel","placeholder","value","onChange","target","IoSearch","size","FaLongArrowAltRight","onClick","id"],"sourceRoot":""}