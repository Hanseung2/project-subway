{"version":3,"file":"static/js/891.e3dcf4c4.chunk.js","mappings":"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","sources":["pages/Map.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Main from '../components/section/Main'\nimport subwayData from '../data/seoulsubwaydata.json'\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\nimport line1 from '../assets/img/subwaymapmarker/1호선마커.png';\nimport line2 from '../assets/img/subwaymapmarker/2호선마커.png';\nimport line3 from '../assets/img/subwaymapmarker/3호선마커.png';\nimport line4 from '../assets/img/subwaymapmarker/4호선마커.png';\nimport line5 from '../assets/img/subwaymapmarker/5호선마커.png';\nimport line6 from '../assets/img/subwaymapmarker/6호선마커.png';\nimport line7 from '../assets/img/subwaymapmarker/7호선마커.png';\nimport line8 from '../assets/img/subwaymapmarker/8호선마커.png';\nimport line9 from '../assets/img/subwaymapmarker/9호선마커.png';\n\nconst lineImages = {\n    \"1호선\": line1,\n    \"2호선\": line2,\n    \"3호선\": line3,\n    \"4호선\": line4,\n    \"5호선\": line5,\n    \"6호선\": line6,\n    \"7호선\": line7,\n    \"8호선\": line8,\n    \"9호선\": line9,\n    \"경강선\": \"#003DA5\",\n    \"경의선\": \"#77C4A3\",\n    \"경춘선\": \"#0C8E72\",\n    \"공항철도\": \"#3681B7\",\n    \"분당선\": \"#F5A200\",\n    \"서해선\": \"#81A914\",\n    \"수인선\": \"#F06A00\",\n    \"신분당선\": \"#D4003B\",\n    \"안산선\": \"#00A5DE\",\n    \"우이신설경전철\": \"#B0CE18\",\n    \"의정부경전철\": \"#FFD400\",\n    \"인천1호선\": \"#8CADCB\",\n    \"인천2호선\": \"#F5A200\",\n    \"인천선\": \"#FF8000\",\n    \"일산선\": \"#B0CE18\",\n    \"장항선\": \"#F5A200\",\n    \"중앙선\": \"#77C4A3\",\n    \"김포도시철도\": \"#BDB092\",\n    \"신림선\": \"#738C00\",\n    \"용인경전철\": \"#509F22\",\n    \"경전철의정부\": \"#FFD400\",\n    \"김포골드라인\": \"#A17E46\",\n    \"인천공항 자기부상철도\": \"#0B4CA2\",\n\n    // 추가 노선에 대한 이미지 URL...\n};\n\nconst Map = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [map, setMap] = useState(null); // 지도 인스턴스 상태 관리\n    const [startStation, setStartStation] = useState(''); // 출발지 상태 관리\n    const [endStation, setEndStation] = useState(''); // 도착지 상태 관리\n\n    // 정보 넘겨주기\n    const navigate = useNavigate();\n\n    const navigateToRouteResult = () => {\n        // navigate 함수를 사용하여 페이지 이동 및 state 전달\n        navigate('/nav', { state: { startStation, endStation } });\n    };\n\n    const goToArrivalPage = (stationName) => {\n        navigate('/arrival', { state: { stationName } });\n    };\n\n    useEffect(() => {\n        window.setStation = (stationName, type) => {\n            if (type === 'start') {\n                setStartStation(stationName);\n            } else if (type === 'end') {\n                setEndStation(stationName);\n            }\n        };\n\n        fetch('/api/kakao/map-url') // 백엔드 API 호출\n            .then((response) => response.json())\n            .then((data) => {\n                const script = document.createElement('script');\n                script.src = data.kakaoMapApiUrl; // 백엔드에서 받은 카카오 지도 API URL 사용\n                script.async = true;\n                document.head.appendChild(script);\n\n                script.onload = () => {\n                    window.kakao.maps.load(() => {\n                        const mapContainer = document.getElementById('map');\n                        const mapOption = {\n                            center: new window.kakao.maps.LatLng(37.5503, 127.0731), // 세종대학교 위치\n                            level: 5,\n                        };\n\n                        const map = new window.kakao.maps.Map(mapContainer, mapOption);\n                        setMap(map); // 지도 인스턴스를 상태에 저장\n\n                        subwayData.forEach((station, index) => {\n                            const markerPosition = new window.kakao.maps.LatLng(station.lat, station.lng);\n\n                            // 노선에 맞는 이미지 URL 가져오기\n                            const markerImageSrc = lineImages[station.line];\n                            const markerImageSize = new window.kakao.maps.Size(24, 30);\n                            const markerImageOption = { offset: new window.kakao.maps.Point(12, 35) };\n\n                            // 마커 이미지 객체 생성\n                            const markerImage = new window.kakao.maps.MarkerImage(markerImageSrc, markerImageSize, markerImageOption);\n\n                            // 마커 생성 및 지도에 표시\n                            const marker = new window.kakao.maps.Marker({\n                                position: markerPosition,\n                                map: map,\n                                image: markerImage,\n                            });\n\n                            const content = `\n                <div class=\"wrap\" id=\"overlay-${index}\">\n                  <div class=\"info\">\n                    <div class=\"title\">\n                      ${station.name}\n                      <div class=\"close\" onclick=\"document.getElementById('overlay-${index}').style.display='none'\" title=\"닫기\"></div>\n                    </div>\n                    <div class=\"body\">\n                      <div class=\"desc\">\n                        <div class=\"ellipsis\">${station.line} ${station.name}</div>\n                        <div>\n                          <button onclick=\"setStation('${station.name}', 'start')\">출발</button>\n                          <button onclick=\"setStation('${station.name}', 'end')\">도착</button>\n                          <button onclick=\"window.goToArrivalPage('${station.name}')\">실시간 도착정보</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n\n                            const overlay = new window.kakao.maps.CustomOverlay({\n                                content: content,\n                                position: marker.getPosition(),\n                                yAnchor: 1,\n                            });\n\n                            window.kakao.maps.event.addListener(marker, 'click', function() {\n                                overlay.setMap(map);\n                                document.querySelectorAll('.wrap').forEach(el => el.style.display = 'none'); // 다른 오버레이 숨기기\n                                document.getElementById(`overlay-${index}`).style.display = 'block'; // 현재 오버레이 표시\n                            });\n                        });\n                        window.goToArrivalPage = (stationName) => {\n                            navigate('/developer', { state: { stationName } });\n                        };\n                    });\n                };\n            });\n\n        return () => {\n            // 컴포넌트 언마운트 시 스크립트 삭제\n            const scriptElement = document.querySelector('script[src^=\"https://dapi.kakao.com\"]');\n            if (scriptElement) {\n                scriptElement.remove();\n            }\n            delete window.goToArrivalPage;\n        };\n    }, []);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        const station = subwayData.find((station) => station.name.includes(searchTerm));\n        if (station && map) {\n            const moveLatLon = new window.kakao.maps.LatLng(station.lat, station.lng);\n            map.setCenter(moveLatLon);\n            map.setLevel(4);\n        }\n    };\n\n    return (\n        <Main title=\"지도\" description=\"지도 페이지\">\n            <div className=\"search-container\">\n                <div className=\"search-form\">\n                    <form onSubmit={handleSearch}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"  지하철역 검색\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                        />\n                        <button type=\"submit\">검색</button>\n                    </form>\n                    <div className=\"route-box\">\n                        <div className=\"route-info\">출발지: {startStation}</div>\n                        <FaLongArrowAltRight />\n                        <div className=\"route-info\">도착지: {endStation}</div>\n                        <button onClick={navigateToRouteResult}>길찾기</button>\n                    </div>\n                </div>\n            </div>\n            <div id=\"map\">지도 로딩중...</div>\n        </Main>\n    );\n};\n\nexport default Map;"],"names":["lineImages","_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","map","setMap","_useState5","_useState6","startStation","setStartStation","_useState7","_useState8","endStation","setEndStation","navigate","useNavigate","useEffect","window","setStation","stationName","type","fetch","then","response","json","data","script","document","createElement","src","kakaoMapApiUrl","async","head","appendChild","onload","kakao","maps","load","mapContainer","getElementById","mapOption","center","LatLng","level","Map","subwayData","forEach","station","index","markerPosition","lat","lng","markerImageSrc","line","markerImageSize","Size","markerImageOption","offset","Point","markerImage","MarkerImage","marker","Marker","position","image","content","concat","name","overlay","CustomOverlay","getPosition","yAnchor","event","addListener","querySelectorAll","el","style","display","goToArrivalPage","state","scriptElement","querySelector","remove","_jsxs","Main","title","description","children","_jsx","className","onSubmit","e","preventDefault","find","includes","moveLatLon","setCenter","setLevel","placeholder","value","onChange","target","FaLongArrowAltRight","onClick","id"],"sourceRoot":""}